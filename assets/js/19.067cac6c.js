(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{187:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("为了更好地理解源码，你需要了解这两件事。")]),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("第二，")]),t._v(" "),a("blockquote",[a("p",[t._v("一个 Vue 应用由一个通过 new Vue 创建的根 Vue 实例，以及可选的嵌套的、可复用的组件树组成。所有的 Vue 组件都是 Vue 实例，并且接受相同的选项对象 (一些根实例特有的选项除外)。")]),t._v(" "),a("p",[t._v("-"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/instance.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js API"),a("OutboundLink")],1)])]),t._v(" "),a("hr"),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("接着，初始化一个 "),a("code",[t._v("options")]),t._v(" 变量，赋值为"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Conditional_Operator",target:"_blank",rel:"noopener noreferrer"}},[t._v("嵌套的三元运算符"),a("OutboundLink")],1),t._v("的结果：")]),t._v(" "),t._m(8),t._m(9),t._v(" "),a("hr"),t._v(" "),t._m(10),t._v(" "),a("hr"),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),a("p",[t._v("然后，我们检查下 "),a("code",[t._v("name")]),t._v(" 变量是否为 false，且"),a("code",[t._v("file")]),t._v(" 变量是否为 true。如果都成立，调用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("match")]),t._v(" 方法"),a("OutboundLink")],1),t._v("，参数为一个正则表达式，返回值变量赋值为变量 "),a("code",[t._v("match")]),t._v("。这个正则表达式查找以 .vue 结尾的文件名。")]),t._v(" "),a("p",[t._v("正则表达式的括号里，最前面有一个 ^ 符号，表示是"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions#special-negated-character-set",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个反向字符集"),a("OutboundLink")],1),t._v("：")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),a("p",[t._v("如果有困惑的话，不妨看下 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("match")]),t._v(" 方法的返回值"),a("OutboundLink")],1),t._v("：")]),t._v(" "),t._m(17),t._v(" "),a("p",[t._v("所以，返回数组的第一个元素是匹配到的整个字符，第二个元素是仅仅是"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions#%E4%BD%BF%E7%94%A8%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D_2",target:"_blank",rel:"noopener noreferrer"}},[t._v("括号的子字符串匹配"),a("OutboundLink")],1),t._v("到的。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("现在，我们回到后面的代码里：")]),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/ohhoney1/Vue.js-Source-Code-line-by-line/blob/master/docs/17-the-classify-function.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("下一章"),a("OutboundLink")],1),t._v("里，我们将简单看一下 "),a("code",[t._v("classify")]),t._v(" 函数。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"formatcomponentname-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#formatcomponentname-函数","aria-hidden":"true"}},[this._v("#")]),this._v(" formatComponentName 函数")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" formatComponentName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("noop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("formatComponentName")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" includeFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<Root>'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_isVue\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_componentTag\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__file\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/([^/\\\\]+)\\.vue$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`<")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("classify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(">`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`<Anonymous>`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" includeFile "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("` at ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果在开发环境中，"),s("code",[this._v("formatComponentName")]),this._v(" 函数什么也不做，因为在顶级作用域下，它的值为 noop 函数。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("noop")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果不在开发环境中，变量 "),s("code",[this._v("formatComponentName")]),this._v(" 被重置为一个全新的函数，接收 "),s("code",[this._v("vm")]),this._v(" 和 "),s("code",[this._v("includeFile")]),this._v(" 作为参数。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("Vue 文档里解释 "),a("code",[t._v("vm.$root")]),t._v(" 是“当前组件树的根 Vue 实例。如果当前实例没有父实例，值就是它自身”。所以，当 "),a("code",[t._v("if")]),t._v(" 语句检测到 "),a("code",[t._v("vm.$root")]),t._v(" 严格等于 "),a("code",[t._v("vm")]),t._v("，即检测到 "),a("code",[t._v("vm")]),t._v(" 没有父实例，因此就是当前组件树的根 Vue 实例。如果当前 Vue 实例不存在父实例，函数返回 "),a("code",[t._v("<Root>")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("第一，Vue 实例上的属性和方法（而不是用户自定义的属性和方法）上添加前缀 $ ，是为了清晰地区别于用户自定义的。因此，"),s("code",[this._v("vm.$root")]),this._v("是一个实例属性。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("所以，对于 "),a("code",[t._v("formatComponentName")]),t._v(" 函数的目的，首先 "),a("code",[t._v("if")]),t._v(" 语句通过判断 "),a("code",[t._v("vm.$root")]),t._v(" 这个实例属性是否严格等于所传递的实例，只检查 "),a("code",[t._v("vm")]),t._v(" 参数是根 Vue 实例或者一个 Vue 组件。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_isVue\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("如果 "),a("code",[t._v("vm")]),t._v(" 是一个函数，且 "),a("code",[t._v("vm.cid")]),t._v(" 不等于 null，"),a("code",[t._v("options")]),t._v(" 设置为 "),a("code",[t._v("vm.options")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("函数 "),s("code",[this._v("initExtend")]),this._v(" 中的注释解释了 "),s("code",[this._v("cid")]),this._v(" 属性：“每一个实例的构造函数，包括 Vue ，有一个唯一的 cid。这允许我们创建子构造函数的集合，以实现原型继承，并能够缓存他们”。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("如果 "),a("code",[t._v("vm")]),t._v(" 不是一个函数或者 "),a("code",[t._v("vm.cid")]),t._v(" 为 "),a("code",[t._v("null")]),t._v("，接下来我们检查 "),a("code",[t._v("vm._isVue")]),t._v(" 这个标记是否为 true。你应该还记得，在 "),a("code",[t._v("Vue.prototype._init")]),t._v(" 中设置 "),a("code",[t._v("vm._isVue")]),t._v(" 为 true。如果成立，变量 "),a("code",[t._v("options")]),t._v(" 的值被赋值为 "),a("code",[t._v("vm.$options")]),t._v(" 或者 "),a("code",[t._v("vm.constructor.options")]),t._v("。如果 "),a("code",[t._v("vm._isVue")]),t._v(" 这个标记为 false，变量 "),a("code",[t._v("options")]),t._v(" 被赋值为 vm 或者空对象。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_isVue\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("接下来，初始化"),a("code",[t._v("name")]),t._v(" 变量，如果 "),a("code",[t._v("options.name")]),t._v(" 存在，赋值为 "),a("code",[t._v("options.name")]),t._v("，若不存在，赋值为 "),a("code",[t._v("options._componentTag")]),t._v("。初始化 "),a("code",[t._v("file")]),t._v(" 变量，赋值为 "),a("code",[t._v("options.__file")]),t._v("：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_componentTag\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__file\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("一个反向字符集。也就是说， 它匹配任何没有包含在方括号中的字符。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("因此，"),a("code",[t._v("match")]),t._v(" 将会是任何值，除了值为斜杠或反斜杠（用两个反斜杠是因为第一个是用来转义的）。如果 "),a("code",[t._v("match")]),t._v(" 值存在，变量 "),a("code",[t._v("name")]),t._v(" 被赋值为 "),a("code",[t._v("match[1]")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果有正则表达式匹配到了某字符，它将会返回数组，这个数组的第一个元素为匹配到字符，其次是符合括号里条件的任何字符。如果什么都没匹配到，返回 "),s("code",[this._v("null")]),this._v("。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`<")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("classify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(">`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`<Anonymous>`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" includeFile "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("` at ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("显然，返回的是一个拼接后的字符串。我们一次性的将连接字符串的每个部分。首先，如果 "),s("code",[this._v("name")]),this._v(" 判断为 true，调用 "),s("code",[this._v("classify")]),this._v(" 函数（下一章里讲解这个函数），传的参数为 "),s("code",[this._v("name")]),this._v("，拼接尖括号后返回出去。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("如果 "),a("code",[t._v("name")]),t._v(" 强制转换后不为 true，函数 "),a("code",[t._v("formatComponentName")]),t._v(" 返回 "),a("code",[t._v("'<Anonymous>'")]),t._v(" 和后面两个选项之一。如果 "),a("code",[t._v("file")]),t._v(" 判断为 true，且 "),a("code",[t._v("includeFiles")]),t._v(" 不严格等于 false，然后，拼接 ' at ' 和 "),a("code",[t._v("file")]),t._v("。否则，拼接是空字符串。")])}],!1,null,null,null);s.default=e.exports}}]);